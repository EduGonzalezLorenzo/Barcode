    private String aplySizes(char[] barcodeDrawCharArray) {
        String barcodeBits = "";
        char pastChar = barcodeDrawCharArray[0];
        int counter = 1;

        //recorrer barcodeDraw, asignar 0 cuando longitud es igual que smallest y 1 cuando no.
        for (int i = 1; i < barcodeDrawCharArray.length; i++) {
            char actualChar = barcodeDrawCharArray[i];
            if (actualChar == pastChar) counter++;
            else {
                if (barcodeBits.length() % 2 == 0) {
                    if (counter == this.smallestBar) barcodeBits += "0";
                    else barcodeBits += "1";
                } else {
                    if (counter == this.smallestSpace) barcodeBits += "0";
                    else barcodeBits += "1";
                }
                counter = 1;
            }
            pastChar = actualChar;
        }
        barcodeBits = lastLoop(barcodeBits, counter);
        System.out.println(barcodeBits);
        return barcodeBits;
    }

    private String lastLoop(String barcodeBits, int counter) {
        if (barcodeBits.length() % 2 == 0) {
            if (counter == this.smallestBar) barcodeBits += "0";
            else barcodeBits += "1";
        } else {
            if (counter == this.smallestSpace) barcodeBits += "0";
            else barcodeBits += "1";
        }
        return barcodeBits;
    }

    private void getSizes(String barcodeDraw) {
        int tempBarSize = 1;
        int tempSpaceSize = 1;
        char[] barcodeDrawCharArray = barcodeDraw.toCharArray();
        char pastChar = barcodeDrawCharArray[0];

        for (int i = 1; i < barcodeDrawCharArray.length; i++) {
            char actualChar = barcodeDrawCharArray[i];
            if (pastChar == actualChar) {
                if (pastChar == 'â–ˆ') tempBarSize++;
                if (pastChar == ' ') tempSpaceSize++;
            } else {
                if (tempBarSize < this.smallestBar || this.smallestBar == 0) this.smallestBar = tempBarSize;
                if (tempSpaceSize < this.smallestSpace || this.smallestSpace == 0) this.smallestSpace = tempSpaceSize;
                tempBarSize = 1;
                tempSpaceSize = 1;
            }
            if (tempBarSize < this.smallestBar || this.smallestBar == 0) this.smallestBar = tempBarSize;
            if (tempSpaceSize < this.smallestSpace || this.smallestSpace == 0) this.smallestSpace = tempSpaceSize;
            pastChar = actualChar;
        }
    }